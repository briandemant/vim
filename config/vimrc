"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" reset to vim-defaults
set nocompatible      " use vim-defaults instead of vi-defaults (easier, more user friendly)

" Get that filetype stuff happening
filetype on
filetype plugin on
filetype indent on

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" display settings
set background=dark     " enable for dark terminals
set lazyredraw          " Don't update the display while executing macros 
set nowrap              " dont wrap lines
set scrolloff=5         " 2 lines above/below cursor when scrolling
set number              " show line numbers
set showmatch           " show matching bracket (briefly jump)
set matchtime=5         " Bracket blinking.
set shiftround          " use multiple of shiftwidth when indenting with '<' and '>'
set showmode            " show mode in status bar (insert/replace/...)
set showcmd             " show typed command in status bar
set ruler               " show cursor position in status bar
set title               " show file in titlebar
set wildmenu            " completion with menu
set nolist
set listchars=tab:·\ ,eol:¶,trail:·,extends:»,precedes:«,nbsp:•

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" editor settings
set esckeys             " map missed escape sequences (enables keypad keys)
set ignorecase          " case insensitive searching
set smartcase           " but become case sensitive if you type uppercase characters
set smartindent         " smart auto indenting
set smarttab            " smart tab handling for indenting
" RESEARCH MEANING OF:
set magic               " change the way backslashes are used in search patterns
set bs=indent,eol,start " Allow backspacing over everything in insert mode
set nobackup            " no backup~ files.
set wrapscan            " wrap when searching
set tabstop=4           " number of spaces a tab counts for
set shiftwidth=4        " spaces for autoindents
"set expandtab          " turn a tabs into spaces
set undolevels=1000     " use many muchos levels of undo
set wildignore=*.swp,*.bak,*.pyc,*.class
set title               " change the terminal's title
set visualbell          " don't beep
set noerrorbells        " don't beep
set gdefault					" the /g flag on :s substitutions by default
set virtualedit=onemore " allow for cursor beyond last character

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" misc settings
set fileformat=unix     " file mode is unix
"set fileformats=unix,dos    " only detect unix file format, displays that ^M with dos files

" RESEARCH MEANING OF:
set viminfo='20,\"500   " remember copy registers after quitting in the .viminfo file -- 20 jump links, regs up to 500 lines'
set hidden              " remember undo after quitting
set history=1000        " keep 1000 lines of command history

set mouse=v             " use mouse in visual mode (not normal,insert,command,help mode
filetype plugin indent on

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" color settings (if terminal/gui supports it)
if &t_Co > 2 || has("gui_running")
	set t_Co=256
	syntax on          " enable colors
	set hlsearch       " highlight search (very useful!)
	set incsearch      " search incremently (search while typing)
	colorscheme desert
	if has("gui_running")
		set cursorline " highlight current line
		hi cursorline guibg=#444444 " highlight bg color of current line
		hi CursorColumn guibg=#444444 " highlight cursor
	endif
endif


" file type specific settings
if has("autocmd")
  " For debugging
  "set verbose=9

  " if bash is sh.
  let bash_is_sh=1

  " change to directory of current file automatically
  autocmd BufEnter * lcd %:p:h

  " Put these in an autocmd group, so that we can delete them easily.
  augroup mysettings
    au BufReadPre,BufNewFile
    \ *.xsl,*.xml,*.css,*.html,*.js,*.php,*.sql,*.sh,*.conf,*.cc,*.cpp,*.h
    \  set smartindent shiftwidth=2 softtabstop=2 expandtab

    au BufReadPre,BufNewFile
    \ *.tex
    \ set wrap shiftwidth=2 softtabstop=2 expandtab
  augroup END

  augroup perl
    " reset (disable previous 'augroup perl' settings)
    au!  

    au BufReadPre,BufNewFile
    \ *.pl,*.pm
    \ set formatoptions=croq smartindent shiftwidth=2 softtabstop=2 cindent cinkeys='0{,0},!^F,o,O,e' " tags=./tags,tags,~/devel/tags,~/devel/C
    " formatoption:
    "   t - wrap text using textwidth
    "   c - wrap comments using textwidth (and auto insert comment leader)
    "   r - auto insert comment leader when pressing <return> in insert mode
    "   o - auto insert comment leader when pressing 'o' or 'O'.
    "   q - allow formatting of comments with "gq"
    "   a - auto formatting for paragraphs
    "   n - auto wrap numbered lists
    "   
  augroup END


  " Always jump to the last known cursor position. 
  " Don't do it when the position is invalid or when inside
  " an event handler (happens when dropping a file on gvim). 
  autocmd BufReadPost * 
    \ if line("'\"") > 0 && line("'\"") <= line("$") | 
    \   exe "normal g`\"" | 
    \ endif 

endif " has("autocmd")

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" establish vim config root
if !exists("$VIMROOT")
	let $VIMROOT='~/.vim/'
	if filereadable(expand("~/.vim/config/.VIMROOT"))
		source ~/.vim/config/.VIMROOT
	else
		exe 'source ' . system("ls ~/.vim_*/config/.VIMROOT |head -n1")
	endif
endif

" enable pathogen 
source $VIMROOT/autoload/pathogen.vim
call pathogen#infect($VIMROOT . "/bundle")

source $VIMROOT/config/keymaps.vim



if has('cmdline_info')
set ruler " show the ruler
set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%) " a ruler on steroids
set showcmd " show partial commands in status line and
" selected characters/lines in visual mode
endif

if has('statusline')
        set laststatus=2

" Broken down into easily includeable segments
set statusline=%<%f\ " Filename
set statusline+=%w%h%m%r " Options
set statusline+=%{fugitive#statusline()} " Git Hotness
set statusline+=\ [%{&ff}/%Y] " filetype
set statusline+=\ [%{getcwd()}] " current dir
"set statusline+=\ [A=\%03.3b/H=\%02.2B] " ASCII / Hexadecimal value of char
set statusline+=%=%-14.(%l,%c%V%)\ %p%% " Right aligned file nav info
endif

let g:vim_markdown_folding_disabled=1
au BufRead,BufNewFile *.md set filetype=markdown
